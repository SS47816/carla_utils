
<launch>
  <!-- ROS-Bridge node for Simulator connection -->
  <node name="websocket_bridge" pkg="rosbridge_server" type="rosbridge_websocket" output="screen" clear_params="true" required="true" />

  <!-- Rviz -->
  <node type="rviz" name="rviz" pkg="rviz" args="-d $(find lgsvl_utils)/rviz/lgsvl.rviz" />

  <!-- Robot Model -->
  <param name="robot_description"             textfile="$(find lgsvl_utils)/urdf/lexus.urdf" />
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen" />

  <!-- TF -->
  <node ns="tf_static" pkg="tf" type="static_transform_publisher" name="world_to_map" args="0 0 0 0 0 0 /world /map 10" />
  <node ns="tf_static" pkg="tf" type="static_transform_publisher" name="map_to_odom"  args="0 0 0 0 0 0 /map /odom 10" />

  <!-- Re-publishing simulator/camera_node/image/compressed topic to /image_raw as expected by Autoware -->
  <node name="republish" type="republish" pkg="image_transport" output="screen" args="compressed in:=/simulator/camera_node/image raw out:=/image_raw" />

  <!-- Localizer -->
  <node ns="lgsvl_utils" pkg="lgsvl_utils" type="localizer_node" name="localizer_node" output="screen">
    <param name="lgsvl_odom_topic"            value="/odom" />
    <param name="odom_frame"                  value="odom" />
    <param name="baselink_frame"              value="base_link" />
  </node>

  <!-- Ground Truth Viewer -->
  <node ns="lgsvl_utils" pkg="lgsvl_utils" type="gt_viewer_node" name="gt_viewer_node" output="screen">
    <param name="lgsvl_gt2d_topic"            value="/simulator/ground_truth/2d_detections" />
    <param name="lgsvl_gt3d_topic"            value="/simulator/ground_truth/3d_detections" />
    <param name="jsk_bboxes_topic"            value="/simulator/ground_truth/jsk_bounding_boxes" />
    <param name="autoware_objects_topic"      value="/simulator/ground_truth/objects" />
    <param name="bbox_target_frame"           value="base_link" />
    <param name="bbox_filter_size"            value="10.0" />
  </node>

  <node pkg="detected_objects_visualizer" type="visualize_detected_objects" name="detected_objects_visualizer"
    output="screen" ns="simulator/ground_truth"/>

  <!-- Map Files Settings -->
  <arg name="map_name" default="BorregasAve" />
  <arg name="map_file_path" default="$(env HOME)/shared_dir/autoware-data/$(arg map_name)/data/map" />
  <arg name="pcd_map_path" default="$(arg map_file_path)/pointcloud_map/$(arg map_name).pcd" />
  <arg name="lanelet2_map_path" default="$(arg map_file_path)/lanelet2_map/$(arg map_name)_no_proj.osm" />
  <arg name="vector_map_folder" default="$(arg map_file_path)/vector_map" />

  <!-- Point Cloud Map -->
  <arg name="scene_num" default="noupdate" />
  <arg name="path_area_list" default='""' />
  <node pkg="map_file" type="points_map_loader" name="points_map_loader" output="log">
    <rosparam subst_value="true">
      area: $(arg scene_num)
      arealist_path: $(arg path_area_list)
      pcd_paths: [ $(arg pcd_map_path) ]
    </rosparam>
  </node>

  <!-- Vector Map -->
  <node pkg="map_file" type="vector_map_loader" name="vector_map_loader" args="
    $(arg vector_map_folder)/lane.csv
    $(arg vector_map_folder)/dtlane.csv
    $(arg vector_map_folder)/point.csv
    $(arg vector_map_folder)/line.csv
    $(arg vector_map_folder)/pole.csv
    $(arg vector_map_folder)/signaldata.csv
    $(arg vector_map_folder)/stopline.csv
    $(arg vector_map_folder)/vector.csv
    $(arg vector_map_folder)/whiteline.csv
    $(arg vector_map_folder)/node.csv" 
  output="log" />

  <!-- lanelet2 Map -->
  <node pkg="map_file" type="lanelet2_map_loader" name="lanelet2_map_loader" output="log">
    <param name="lanelet2_path" value="$(arg lanelet2_map_path)" />
  </node>
  <node pkg="map_file" type="lanelet2_map_visualization" name="lanelet2_map_visualization" output="log" />

  <!-- lanelet2 Global Planner -->
  <node pkg="mission_planner" type="mission_planner" name="mission_planner" output="screen">
    <param name="map_frame"                   value="map" />
    <param name="base_link_frame"             value="base_link" />
    <remap from="~input/vector_map"           to="/lanelet_map_bin" />
    <remap from="~input/goal_pose"            to="/move_base_simple/goal" />
    <remap from="~input/checkpoint"           to="/move_base_simple/fake_goal" />
    <remap from="~output/route"               to="/planning/mission_planning/route" />
    <remap from="~debug/route_marker"         to="/planning/mission_planning/route_marker" />
    <remap from="~output/global_path"         to="/planning/mission_planning/global_path" />
  </node>


</launch>